geom_density()+
geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
p
library(plyr)
mu <- ddply(df, "sex", summarise, grp.mean=mean(weight))
head(mu)
# Change density plot fill colors by groups
ggplot(df, aes(x=weight, fill=sex)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
library(plyr)
mu <- ddply(df, "sex", summarise, grp.mean=mean(weight))
head(mu)
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
library(plyr)
mu <- ddply(df, "sex", summarise, grp.mean=mean(weight))
head(mu)
# Use semi-transparent fill
p<-ggplot(df, aes(x=weight, fill=sex)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, wine_type, summarise, grp.mean=mean(weight))
head(mu)
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=weight, fill=wine_quality)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=wine_quality),
linetype="dashed")
}
}
col
wine_type
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "red", summarise, grp.mean=mean(weight))
head(mu)
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=weight, fill=wine_quality)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=wine_quality),
linetype="dashed")
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(weight))
head(mu)
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=weight, fill=wine_quality)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=wine_quality),
linetype="dashed")
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(col))
head(mu)
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=col, fill=wine_quality)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=wine_quality),
linetype="dashed")
}
}
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(col))
col
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(fixed.acidity))
mu
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(alcohol))
head(mu)
ggplot(wine_quality, aes(x=col, fill=wine_quality))
ggplot(wine_quality, aes(x=alcohol, fill=wine_quality))
str(wine_quality)
ggplot(wine_quality, aes(x=alcohol, fill=type)
geom_density(alpha=0.4)
ggplot(wine_quality, aes(x=col, fill=type))
p = ggplot(wine_quality, aes(x=col, fill=type)) +
geom_density(alpha=0.4)
p
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(col))
head(mu)
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=col, fill=type)) +
geom_density(alpha=0.4)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=col, fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=weight, fill=type)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
}
}
p
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=col, fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=col, fill=type)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
}
}
p
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=alcohol, fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=alcohol, fill=type)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
wine_quality[,"alcohol"]
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density(alpha=0.4)
p
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
}
}
p
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density(alpha=0.4)
print(p)
# Add mean lines
p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density()
# Use semi-transparent fill
p<-ggplot(wine_quality, aes(x=wine_quality[,"alcohol"], fill=type)) +
geom_density(alpha=0.4)
print(p)
# Add mean lines
print(p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed"))
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density()
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4)
# Add mean lines
p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density()
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Change density plot fill colors by groups
ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density()
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
#print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[2:2]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
p
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(weight))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),     linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:11]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),     linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
wine_quality[,col]
mean(wine_quality[,col])
ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
wine_quality$type
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(col))
ddply(wine_quality, "type", summarise, grp.mean=wine_quality[,col])
ddply(wine_quality, "type", summarise, grp.mean=wine_quality["alcohol"])
ddply(wine_quality, "type", summarise, grp.mean=alcohol)
mu <- ddply(wine_quality, type, summarise, grp.mean=mean(alcohol))
str(wine_quality)
mu <- ddply(wine_quality, "type", summarise, grp.mean=mean(alcohol))
mu
mu <- ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,"alcohol"]))
mu
col
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,"fixed.acidity"]))
mu
str(col)
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,"fixed.acidity"]))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),     linetype="dashed")
# Add mean lines
#p = p+geom_vline(data=mu, aes(xintercept=grp.mean, color=type),
#             linetype="dashed")
print(p)
}
}
mu
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
print(p)
}
}
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
wine_quality[,col]
wine_quality[,"fixed.acidity"]
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
wine_quality[,col]
mean(wine_quality[,col])
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(fixed.acidity))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(col))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
print(p)
}
}
library(plyr)
colnames = names(wine_quality.clean.scaled[1:1]);
wine_quality = wine_quality.clean.scaled
# se itera por las características del vino
for (col in colnames) {
# se itera por los tipos de vino
for (wine_type in c("red", "white")) {
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
print(p)
}
}
(wine_quality[,col]
()
(wine_quality[,col])
wine_quality[,col]
wine_quality[,col]
library(plyr)
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(wine_quality[,col]))
library(plyr)
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(fixed.acidity))
# Use semi-transparent fill
p = ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
library(plyr)
mu = ddply(wine_quality, "type", summarise, grp.mean=mean(fixed.acidity))
# Use semi-transparent fill
ggplot(wine_quality, aes(x=wine_quality[,col], fill=type)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")
